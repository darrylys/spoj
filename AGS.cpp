#include<stdio.h>#define ll long longint rex[50];int getint() {    char c;    int x = 0;    while ((c=getchar())<'0' || c >'9') ;    do {        x = x*10 + c-'0';    } while ((c=getchar())>='0' && c <= '9');    return x;}int mexp(int r, int exp, int mod, int rc) {    if (exp == 0) {        rex[rc] = r;        return 1;    }    if (exp == 1) {        rex[rc] = (int)(((ll)r*r)%mod);        return 1+r;    }        if (exp&1) {        int half = mexp(r, exp>>1, mod, rc+1);        rex[rc] = (int)(((ll)rex[rc+1]*rex[rc+1])%mod);        return (int)(((ll)half*(rex[rc+1]+1))%mod);    } else {        int half = mexp(r, (exp>>1)-1, mod, rc+1);        rex[rc] = (int)(((((ll)rex[rc+1]*rex[rc+1])%mod)*r)%mod);        return (int)(((ll)half+(ll)rex[rc+1]*(half+rex[rc+1]))%mod);    }}int main() {    int t = getint();    int a, d, r, n, mod;    while(t--) {        a = getint();        d = getint();        r=  getint();        n = getint();        mod = getint();                if (n<3) {            if (n==1) printf("%d\n", a);            else if (n==2) printf("%d\n", (a+d)%mod);            continue;        }                int x = (n-1)>>1;        if (n&1) {            //ar^x + dr(r^(x-1) + r(x-2) + ... + 1)            int rexp = mexp(r, x-1, mod, 0);            printf("%d\n", (int)((ll)((ll)a*rex[0] + (((ll)d*r)%mod)*rexp)%mod));        } else {            //(a+d)r^x + d(r(x-1) + ... + 1)            int rexp = mexp(r, x-1, mod, 0);            printf("%d\n", (int)(((ll)(a+d)*rex[0] + (ll)d*rexp)%mod));        }    }    return 0;}